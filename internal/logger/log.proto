syntax = "proto3";
package logger;
option go_package = "internal/logger";


enum LogLevel {
  NONE = 0;
  INFO = 1;
  WARN = 2;
  ERROR = 3;
  DEBUG = 4;
}

message Log {
  uint32 id = 1;
  string message = 2;
  LogLevel level = 3;
  uint32 severity = 4;
  int64 timestamp = 5;
  string origin = 6;
  string source = 7;
  string type = 8;
  string group = 9;
  string tags = 10;

  message Data {
    map<string, string> fields = 1;
  }

  Data data = 11;
}

message LogConfig {
  bool print_message = 1;
  bool print_level = 2;
  bool print_groups = 3;
  bool print_id = 4;
  bool print_in_color = 5;
  bool print_and_forget = 6;
}

message GetLogsRequest {
  uint32 limit = 1;
  uint32 offset = 2;
  string source = 3;
  string type = 4;
  string group = 5;
  string tags = 6;
  string origin = 7;
  string message = 8;
  LogLevel level = 9;
  uint32 severity = 10;
  int64 timestamp = 11;
}

message GetLogRequest {
  uint32 id = 1;
}

service LogService {
  rpc SendLog(Log) returns (LogResponse) {}
  rpc GetLogs(GetLogsRequest) returns (stream Log) {}
  rpc GetLog(GetLogRequest) returns (Log) {}
}

message LogResponse {
  bool success = 1;
}